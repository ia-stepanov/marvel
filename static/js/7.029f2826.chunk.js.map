{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","ComicsList","useState","comicsList","setComicsList","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","arr","items","map","item","i","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","display","onClick","ComicsPage","name","content","AppBanner","width","height","objectFit","margin","img","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","data","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","res","results","_transformCharacter","getCharacterByName","getCharacter","_transformComics","getComic","char","description","slice","path","extension","homepage","urls","wiki","comics","pageCount","language","textObjects","prices","avengers","avengersLogo"],"mappings":"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","file":"static/js/7.029f2826.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Spinner />;\r\n    case 'loading':\r\n      return newItemLoading ? <Component /> : <Spinner />;\r\n    case 'confirmed':\r\n      return <Component />;\r\n    case 'error':\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error('Unexpected process state');\r\n  }\r\n};\r\n\r\nconst ComicsList = () => {\r\n  const [comicsList, setComicsList] = useState([]);\r\n  const [newItemLoading, setnewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(0);\r\n  const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n  const { getAllComics, process, setProcess } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\r\n    getAllComics(offset)\r\n      .then(onComicsListLoaded)\r\n      .then(() => setProcess('confirmed'));\r\n  };\r\n\r\n  const onComicsListLoaded = (newComicsList) => {\r\n    let ended = false;\r\n    if (newComicsList.length < 8) {\r\n      ended = true;\r\n    }\r\n\r\n    setComicsList([...comicsList, ...newComicsList]);\r\n    setnewItemLoading(false);\r\n    setOffset(offset + 8);\r\n    setComicsEnded(ended);\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      return (\r\n        <li className=\"comics__item\" key={i}>\r\n          <Link to={`/comics/${item.id}`}>\r\n            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\r\n            <div className=\"comics__item-name\">{item.title}</div>\r\n            <div className=\"comics__item-price\">{item.price}</div>\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul className=\"comics__grid\">{items}</ul>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"comics__list\">\r\n      {setContent(process, () => renderItems(comicsList), newItemLoading)}\r\n      <button\r\n        disabled={newItemLoading}\r\n        style={{ display: comicsEnded ? 'none' : 'block' }}\r\n        className=\"button button__main button__long\"\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\r\n\r\nimport ComicsList from '../comicsList/ComicsList';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <meta name=\"description\" content=\"Page with list of our comics\" />\r\n          <title>Comics Page</title>\r\n        </Helmet>\r\n        <AppBanner />\r\n        <ComicsList />\r\n      </HelmetProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: 'block',\r\n        width: '250px',\r\n        height: '250px',\r\n        objectFit: 'contain',\r\n        margin: '0 auto',\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from '../hooks/http.hook';\r\nconst APE_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = `apikey=${APE_KEY}`;\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n    };\r\n  };\r\n\r\n  return {\r\n    clearError,\r\n    process,\r\n    setProcess,\r\n    getAllCharacters,\r\n    getCharacterByName,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState('waiting');\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = 'GET',\r\n      body = null,\r\n      headers = { 'Content-Type': 'application/json' }\r\n    ) => {\r\n      setProcess('loading');\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setProcess('error');\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n  return (\r\n    <div className=\"app__banner\">\r\n      <img src={avengers} alt=\"Avengers\" />\r\n      <div className=\"app__banner-text\">\r\n        New comics every week!\r\n        <br />\r\n        Stay tuned!\r\n      </div>\r\n      <img src={avengersLogo} alt=\"Avengers logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppBanner;\r\n"],"sourceRoot":""}