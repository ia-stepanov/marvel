{"version":3,"sources":["resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["View","data","name","description","thumbnail","homepage","wiki","imgStyle","objectFit","className","src","alt","style","href","RandomChar","useState","char","setChar","useMarvelService","getCharacter","clearError","process","setProcess","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","setContent","onClick","mjolnir","Component","newItemLoading","Spinner","ErrorMessage","Error","CharList","props","charList","setCharList","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","items","map","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","display","comics","CharInfo","charId","CharSearchForm","loading","error","getCharacterByName","errorMessage","results","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","ErrorBoundary","state","errorInfo","this","setState","children","MainPage","selectedChar","content","decoration","width","height","margin","img","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","useHttp","_apiBase","_apiKey","res","_transformCharacter","getAllComics","_transformComics","getComic","slice","path","extension","urls","title","pageCount","language","textObjects","price","prices","Skeleton"],"mappings":"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","file":"static/js/6.7eef23b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n  const [char, setChar] = useState(null);\r\n  const { getCharacter, clearError, process, setProcess } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    const timerId = setInterval(updateChar, 60000);\r\n\r\n    return () => {\r\n      clearInterval(timerId);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\r\n    getCharacter(id)\r\n      .then(onCharLoaded)\r\n      .then(() => setProcess('confirmed'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {setContent(process, View, char)}\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today!\r\n          <br />\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <button onClick={updateChar} className=\"button button__main\">\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ data }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = data;\r\n  let imgStyle = { objectFit: 'cover' };\r\n  if (\r\n    thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\r\n  ) {\r\n    imgStyle = { objectFit: 'contain' };\r\n  }\r\n\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img\r\n        src={thumbnail}\r\n        alt=\"Random character\"\r\n        className=\"randomchar__img\"\r\n        style={imgStyle}\r\n      />\r\n      <div className=\"randomchar__info\">\r\n        <p className=\"randomchar__name\">{name}</p>\r\n        <p className=\"randomchar__descr\">{description}</p>\r\n        <div className=\"randomchar__btns\">\r\n          <a href={homepage} className=\"button button__main\">\r\n            <div className=\"inner\">homepage</div>\r\n          </a>\r\n          <a href={wiki} className=\"button button__secondary\">\r\n            <div className=\"inner\">Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomChar;\r\n","/* eslint-disable no-unreachable */\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './charList.scss';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Spinner />;\r\n      break;\r\n    case 'loading':\r\n      return newItemLoading ? <Component /> : <Spinner />;\r\n      break;\r\n    case 'confirmed':\r\n      return <Component />;\r\n      break;\r\n    case 'error':\r\n      return <ErrorMessage />;\r\n      break;\r\n    default:\r\n      throw new Error('Unexpected process state');\r\n  }\r\n};\r\n\r\nconst CharList = (props) => {\r\n  const [charList, setCharList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(210);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const { getAllCharacters, process, setProcess } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllCharacters(offset)\r\n      .then(onCharListLoaded)\r\n      .then(() => setProcess('confirmed'));\r\n  };\r\n\r\n  const onCharListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    setCharList((charList) => [...charList, ...newCharList]);\r\n    setNewItemLoading((newItemLoading) => false);\r\n    setOffset((offset) => offset + 9);\r\n    setCharEnded((charEnded) => ended);\r\n  };\r\n\r\n  const itemRefs = useRef([]);\r\n\r\n  const focusOnItem = (id) => {\r\n    itemRefs.current.forEach((item) => item.classList.remove('char__item_selected'));\r\n    itemRefs.current[id].classList.add('char__item_selected');\r\n    itemRefs.current[id].focus();\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      let imgStyle = { objectFit: 'cover' };\r\n      if (\r\n        item.thumbnail ===\r\n        'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\r\n      ) {\r\n        imgStyle = { objectFit: 'unset' };\r\n      }\r\n\r\n      return (\r\n        <li\r\n          className=\"char__item\"\r\n          tabIndex={0}\r\n          ref={(el) => (itemRefs.current[i] = el)}\r\n          key={item.id}\r\n          onClick={() => {\r\n            props.onCharSelected(item.id);\r\n            focusOnItem(i);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === ' ' || e.key === 'Enter') {\r\n              props.onCharSelected(item.id);\r\n              focusOnItem(i);\r\n            }\r\n          }}\r\n        >\r\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n          <div className=\"char__name\">{item.name}</div>\r\n        </li>\r\n      );\r\n    });\r\n    return <ul className=\"char__grid\">{items}</ul>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      {setContent(process, () => renderItems(charList), newItemLoading)}\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        disabled={newItemLoading}\r\n        style={{ display: charEnded ? 'none' : 'block' }}\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharList.propTypes = {\r\n  onCharSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CharList;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n  const [char, setChar] = useState(null);\r\n  const { getCharacter, clearError, process, setProcess } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // eslint-disable-next-line\r\n  }, [props.charId]);\r\n\r\n  const updateChar = () => {\r\n    const { charId } = props;\r\n    if (!charId) {\r\n      return;\r\n    }\r\n\r\n    clearError();\r\n    getCharacter(charId)\r\n      .then(onCharLoaded)\r\n      .then(() => setProcess('confirmed'));\r\n  };\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  return <div className=\"char__info\">{setContent(process, View, char)}</div>;\r\n};\r\n\r\nconst View = ({ data }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = data;\r\n  let imgStyle = { objectFit: 'cover' };\r\n  if (\r\n    thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\r\n  ) {\r\n    imgStyle = { objectFit: 'contain' };\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={thumbnail} alt={name} style={imgStyle} />\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{description}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n        {comics.length > 0 ? null : 'There is no comics with this character'}\r\n\r\n        {comics.map((item, i) => {\r\n          // eslint-disable-next-line\r\n          if (i > 9) return;\r\n          return (\r\n            <li key={i} className=\"char__comics-item\">\r\n              {item.name}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","import { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = () => {\r\n  const [char, setChar] = useState(null);\r\n  const { loading, error, getCharacterByName, clearError } = useMarvelService();\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = (name) => {\r\n    clearError();\r\n\r\n    getCharacterByName(name).then(onCharLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? (\r\n    <div className=\"char__search-critical-error\">\r\n      <ErrorMessage />\r\n    </div>\r\n  ) : null;\r\n  const results = !char ? null : char.length > 0 ? (\r\n    <div className=\"char__search-wrapper\">\r\n      <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n      <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\r\n        <div className=\"inner\">To page</div>\r\n      </Link>\r\n    </div>\r\n  ) : (\r\n    <div className=\"char__search-error\">\r\n      The character was not found. Check the name and try again\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"char__search-form\">\r\n      <Formik\r\n        initialValues={{\r\n          charName: '',\r\n        }}\r\n        validationSchema={Yup.object({\r\n          charName: Yup.string().required('This field is required'),\r\n        })}\r\n        onSubmit={({ charName }) => {\r\n          updateChar(charName);\r\n        }}\r\n      >\r\n        <Form>\r\n          <label className=\"char__search-label\" htmlFor=\"charName\">\r\n            Or find a character by name:\r\n          </label>\r\n          <div className=\"char__search-wrapper\">\r\n            <Field id=\"charName\" name=\"charName\" type=\"text\" placeholder=\"Enter name\" />\r\n            <button type=\"submit\" className=\"button button__main\" disabled={loading}>\r\n              <div className=\"inner\">find</div>\r\n            </button>\r\n          </div>\r\n          <FormikErrorMessage\r\n            component=\"div\"\r\n            className=\"char__search-error\"\r\n            name=\"charName\"\r\n          />\r\n        </Form>\r\n      </Formik>\r\n      {results}\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharSearchForm;\r\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\n\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport CharSearchForm from '../charSearchForm/CharSearchForm';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <meta name=\"description\" content=\"Marvel information portal\" />\r\n          <title>Marvel Information Portal</title>\r\n        </Helmet>\r\n        <ErrorBoundary>\r\n          <RandomChar />\r\n        </ErrorBoundary>\r\n        <div className=\"char__content\">\r\n          <ErrorBoundary>\r\n            <CharList onCharSelected={onCharSelected} />\r\n          </ErrorBoundary>\r\n          <div>\r\n            <ErrorBoundary>\r\n              <CharInfo charId={selectedChar} />\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <CharSearchForm />\r\n            </ErrorBoundary>\r\n          </div>\r\n        </div>\r\n        <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n      </HelmetProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: 'block',\r\n        width: '250px',\r\n        height: '250px',\r\n        objectFit: 'contain',\r\n        margin: '0 auto',\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from '../hooks/http.hook';\r\nconst APE_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = `apikey=${APE_KEY}`;\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n    };\r\n  };\r\n\r\n  return {\r\n    clearError,\r\n    process,\r\n    setProcess,\r\n    getAllCharacters,\r\n    getCharacterByName,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState('waiting');\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = 'GET',\r\n      body = null,\r\n      headers = { 'Content-Type': 'application/json' }\r\n    ) => {\r\n      setProcess('loading');\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setProcess('error');\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n  return (\r\n    <>\r\n      <p className=\"char__select\">Please select a character to see information</p>\r\n      <div className=\"skeleton\">\r\n        <div className=\"pulse skeleton__header\">\r\n          <div className=\"pulse skeleton__circle\"></div>\r\n          <div className=\"pulse skeleton__mini\"></div>\r\n        </div>\r\n        <div className=\"pulse skeleton__block\"></div>\r\n        <div className=\"pulse skeleton__block\"></div>\r\n        <div className=\"pulse skeleton__block\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","/* eslint-disable no-unreachable */\r\nimport Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Skeleton />;\r\n      break;\r\n    case 'loading':\r\n      return <Spinner />;\r\n      break;\r\n    case 'confirmed':\r\n      return <Component data={data} />;\r\n      break;\r\n    case 'error':\r\n      return <ErrorMessage />;\r\n      break;\r\n    default:\r\n      throw new Error('Unexpected process state');\r\n  }\r\n};\r\n\r\nexport default setContent;\r\n"],"sourceRoot":""}